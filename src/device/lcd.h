///////////////////////////////////////////////////////////////////////////
/// @file LCD.h
/// @brief LCD12864显示的头文件
/// 
/// LCD显示模块提供了一个与12864点阵液晶的接口
/// 要使用这个驱动,你必须按照如下步骤操作：
/// 1) 根据处理器修改包含的头文件(位于LCD.h)；
/// 2) 根据硬件设计进行配置(位于LCD.h)：
///    LCD_X_PORT-------------与LCD相连的单片机的端口；
///    LCD_X------------------与LCD相连的单片具体的引脚号；
///	3) 用户使用LCD时，需要先对LCD进行初始化LCD_Init()(位于LCD.c)；
/// 4) 初始化完成后需要开启显示功能
/// 
/// 
/// <b>Copyright （c） 2014， 天地（常州）自动化股份有限公司</b>
///////////////////////////////////////////////////////////////////////////
#ifndef _LCD_H_
#define _LCD_H_

#ifdef __cplusplus
 extern "C" {
#endif
	
#include "chip.h"	 
	 
//定义与LCD相关的IO口
#define LCD_EN_PIN_ENABLE  	 Chip_GPIO_SetPinOutHigh(LPC_GPIO, 2, 10)
#define LCD_EN_PIN_DISENABLE   Chip_GPIO_SetPinOutLow(LPC_GPIO, 2, 10)

	 
//定义与LCD相关的引脚
#define LCD_PORT  2

#define LCD_DB0  0
#define LCD_DB1  1
#define LCD_DB2  2
#define LCD_DB3  3
#define LCD_DB4  4
#define LCD_DB5  5
#define LCD_DB6  6
#define LCD_DB7  7
#define LCD_E    10
#define LCD_RW   9
#define LCD_RS   8



//接口函数需要用到的参数
#define LCD_DELAY        30       //软件延时时间       
#define ORDER_CLEAR      0x01U    //指令：清屏
#define ORDER_DISPON     0x0CU    //指令：开显示
#define ORDER_DISPOFF    0x08U    //指令：关显示
#define ORDER_CURSOROFF	 0x0CU    //指令：关光标
#define ORDER_CURSORON   0x0EU    //指令：开光标
#define ORDER_BASICI     0x30U    //指令：切换到基本指令集
#define ORDER_EXPANDI    0x34U    //指令：切换到扩展指令集
#define ORDER_GDRAMOPEN  0x36U    //指令：显示绘图

/////////////////////////////////////////////////
/// 操作接口函数声明 
/////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    LCD点阵液晶显示模块初始化
/// 
/// @param[in]  无
/// @return     无 
/// @note       初始化完成后，所有与LCD相关引脚均为低速高输出模式，初始值为0，
///             如果需要改变初始时IO引脚状态，需在LCD.c文件LCD_PINInit函数中修改
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
extern void LCD_Init(void);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    打开液晶显示
///  
/// @param[in]  无
/// @return     无
/// @note 
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_DisplayOn(void);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    关闭液晶显示，背光不能关闭
///  
/// @param[in]  无
/// @return     无
/// @note 
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_DisplayOff(void);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    清除LCD所有显示内容（清屏）
/// 
/// @param[in]  无
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_Clean(void);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    清除LCD某一行的显示内容
/// 
/// @param[in]  line 行号：0~3
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_CleanLine(uint8_t line);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    开光标
/// 
/// @param[in]  无
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_CursorOn(void);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    关光标
/// 
/// @param[in]  无
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_CursorOff(void);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    设置光标位置
/// 
/// @param[in]  line 行号：0~3
/// @param[in]  column 列号 0~7
///
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_SetCursor(uint8_t line,uint8_t column);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    显示n个字
/// 
/// @param[in]  string字串首地址
/// @param[in]  start 需要显示字在字串中的位置，整个字串第一个地址定义为0
/// @param[in]  len 需要显示字的个数
/// @return     无 
/// @note       字串中字必须是双字节，如在单字节输入下，英文字母，数字，标点符号
///             特殊字符等，必须是偶数个，如果是单个字符，需用空格补足。
///             eg ＡＢＣａｂｃ为双字节可以直接放入字串中调用，如ABCabc是单字节，
///             必须连续偶数个，不足需用空格补足
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_DisplayString(uint8_t *string,uint8_t start,uint8_t len);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    从某个位置开始显示n个字
///
/// @param[in]  line 行号：0~3
/// @param[in]  column 列号：0~7
/// @param[in]  string字串首地址
/// @param[in]  start 需要显示字在字串中的位置，整个字串第一个地址定义为0
/// @param[in]  len 需要显示字的个数
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_DisplayStringXY(uint8_t line,uint8_t column,uint8_t *displaybuff,uint8_t start,uint8_t len);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    清除位图存储器
///
/// @param[in]  无
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_ClearDGRAM(void);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    显示一幅图片
///
/// @param[in]  pPictureArray位图取模数组首地址
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_LoadPicture(uint8_t *pPictureArray);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    显示图片和字串
///
/// @param[in]  pPictureArray位图取模数组首地址
/// @param[in]  x 行号：0~3
/// @param[in]  y 列号：0~7
/// @param[in]  n 显示字的个数
/// @return     无 
/// @note       在LCD中同时显示图片和字串，x，y是字串的起始位置，注意字和图片不要重叠
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_PictureString(uint8_t *pPictureArray,uint8_t x,uint8_t y,uint8_t *string,uint8_t start,uint8_t len);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    画线
///
/// @param[in]  startX 线的起始点x坐标：0~127
/// @param[in]  startY 线的起始点y坐标：0~63
/// @param[in]  endX   线的终点x坐标：0~127
/// @param[in]  endY   线的终点y坐标：0~63
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_DrawLine(uint8_t startX,uint8_t endX,uint8_t startY,uint8_t endY);


//////////////////////////////////////////////////////////////////////////////////
/// @brief 	    画矩形
///
/// @param[in]  startX 矩形左上角x坐标：0~127
/// @param[in]  startY 矩形左上角Y坐标：0~63
/// @param[in]  endX   矩形右下角x坐标：0~127
/// @param[in]  endY   矩形右下角y坐标：0~63
/// @return     无 
/// @note       
///
/// <b>修改历史：\n</b> 
/// - 1. 2016-03-07 王化格 创建函数 
//////////////////////////////////////////////////////////////////////////////////
void LCD_DrawRect(uint8_t start_X,uint8_t start_Y,uint8_t end_X,uint8_t end_Y);



#ifdef __cplusplus
}
#endif

#endif  /* _LCD_H_ */
